<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lk.copmutershop.dao.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.lk.copmutershop.bean.Orders">
    <id column="order_Id" jdbcType="INTEGER" property="orderId" />
    <result column="Goods_Id" jdbcType="INTEGER" property="goodsId" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="total" jdbcType="DOUBLE" property="total" />
    <result column="order_time" jdbcType="DATE" property="orderTime" />
    <result column="account_Id" jdbcType="VARCHAR" property="accountId" />
    <result column="Address" jdbcType="VARCHAR" property="address" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_Id, Goods_Id, account, number, total, order_time, account_Id, Address
  </sql>
  <select id="selectByExample" parameterType="com.lk.copmutershop.bean.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where order_Id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where order_Id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lk.copmutershop.bean.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lk.copmutershop.bean.Orders">
    insert into orders (order_Id, Goods_Id, account, 
      number, total, order_time, 
      account_Id, Address)
    values (#{orderId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, 
      #{number,jdbcType=INTEGER}, #{total,jdbcType=DOUBLE}, #{orderTime,jdbcType=DATE}, 
      #{accountId,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lk.copmutershop.bean.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_Id,
      </if>
      <if test="goodsId != null">
        Goods_Id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="accountId != null">
        account_Id,
      </if>
      <if test="address != null">
        Address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        #{total,jdbcType=DOUBLE},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=DATE},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lk.copmutershop.bean.OrdersExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.orderId != null">
        order_Id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        Goods_Id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=DOUBLE},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=DATE},
      </if>
      <if test="record.accountId != null">
        account_Id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        Address = #{record.address,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set order_Id = #{record.orderId,jdbcType=INTEGER},
      Goods_Id = #{record.goodsId,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=INTEGER},
      total = #{record.total,jdbcType=DOUBLE},
      order_time = #{record.orderTime,jdbcType=DATE},
      account_Id = #{record.accountId,jdbcType=VARCHAR},
      Address = #{record.address,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lk.copmutershop.bean.Orders">
    update orders
    <set>
      <if test="goodsId != null">
        Goods_Id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=DOUBLE},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=DATE},
      </if>
      <if test="accountId != null">
        account_Id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        Address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where order_Id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lk.copmutershop.bean.Orders">
    update orders
    set Goods_Id = #{goodsId,jdbcType=INTEGER},
      account = #{account,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      total = #{total,jdbcType=DOUBLE},
      order_time = #{orderTime,jdbcType=DATE},
      account_Id = #{accountId,jdbcType=VARCHAR},
      Address = #{address,jdbcType=VARCHAR}
    where order_Id = #{orderId,jdbcType=INTEGER}
  </update>
   <!-- //查询会员购买订单 List<Orders> querybuyorder(String accountId); -->
	<select id="querybuyorder" parameterType="java.lang.String" resultMap="ordersmap">
		select *from orders,goods
        where orders.Goods_Id=goods.Goods_Id  
        and orders.account_Id = #{accountId,jdbcType=VARCHAR}
        order by order_Id desc
	</select>
	<!-- 使用resultMap映射实体类和字段之间的一一对应关系 -->
	<resultMap type="com.lk.copmutershop.bean.Orders" id="ordersmap">
		<id property="orderId" column="order_Id" />
		<result column="account" jdbcType="VARCHAR" property="account" />
		<result column="number" jdbcType="INTEGER" property="number" />
		<result column="Total" jdbcType="DOUBLE" property="total" />
		<result column="order_Time" jdbcType="TIMESTAMP" property="orderTime" />
		<result column="account_Id" jdbcType="VARCHAR" property="accountId" />
		<result column="Address" jdbcType="VARCHAR" property="address" />
		<association property="goods" javaType="com.lk.copmutershop.bean.Goods">
			<id property="goodsId" column="Goods_Id" />
		    <result column="Account" jdbcType="VARCHAR" property="account" />
			<result column="Goods_name" jdbcType="VARCHAR" property="goodsName" />
			<result column="Goods_phone" jdbcType="VARCHAR" property="goodsPhone" />
			<result column="Type_Id" jdbcType="INTEGER" property="typeId" />
			<result column="Goods_price" jdbcType="DOUBLE" property="goodsPrice" />
			<result column="Goods_oldprice" jdbcType="DOUBLE" property="goodsOldprice" />
			<result column="Trade_mode" jdbcType="VARCHAR" property="tradeMode" />
			<result column="Relase_time" jdbcType="TIMESTAMP" property="relaseTime" />
			<result column="Goods_describe" jdbcType="VARCHAR" property="goodsDescribe" />
			<result column="Goods_category" jdbcType="VARCHAR" property="goodsCategory" />		
		</association>
	</resultMap>
	<!--  //查询会员销售订单 List<Orders> querysaleorder(String account); -->
	<select id="querysaleorder" parameterType="java.lang.String" resultMap="saleordersmap">
		select *from orders,goods
        where orders.Goods_Id=goods.Goods_Id  
        and orders.account = #{account,jdbcType=VARCHAR}
        order by order_Id desc
	</select>
	<!-- 使用resultMap映射实体类和字段之间的一一对应关系 -->
	<resultMap type="com.lk.copmutershop.bean.Orders" id="saleordersmap">
		<id property="orderId" column="order_Id" />
		<result column="account" jdbcType="VARCHAR" property="account" />
		<result column="number" jdbcType="INTEGER" property="number" />
		<result column="Total" jdbcType="DOUBLE" property="total" />
		<result column="order_Time" jdbcType="TIMESTAMP" property="orderTime" />
		<result column="account_Id" jdbcType="VARCHAR" property="accountId" />
		<result column="Address" jdbcType="VARCHAR" property="address" />
		<association property="goods" javaType="com.lk.copmutershop.bean.Goods">
			<id property="goodsId" column="Goods_Id" />
		    <result column="Account" jdbcType="VARCHAR" property="account" />
			<result column="Goods_name" jdbcType="VARCHAR" property="goodsName" />
			<result column="Goods_phone" jdbcType="VARCHAR" property="goodsPhone" />
			<result column="Type_Id" jdbcType="INTEGER" property="typeId" />
			<result column="Goods_price" jdbcType="DOUBLE" property="goodsPrice" />
			<result column="Goods_oldprice" jdbcType="DOUBLE" property="goodsOldprice" />
			<result column="Trade_mode" jdbcType="VARCHAR" property="tradeMode" />
			<result column="Relase_time" jdbcType="TIMESTAMP" property="relaseTime" />
			<result column="Goods_describe" jdbcType="VARCHAR" property="goodsDescribe" />
			<result column="Goods_category" jdbcType="VARCHAR" property="goodsCategory" />		
		</association>
	</resultMap>
</mapper>